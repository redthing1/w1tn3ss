#pragma once

#include "abi/api_knowledge_db.hpp"
#include <vector>

namespace w1::abi::apis::macos {

// determine macOS calling convention based on architecture
#if defined(__x86_64__)
#define MACOS_API_CONVENTION calling_convention_id::X86_64_SYSTEM_V
#elif defined(__aarch64__)
#define MACOS_API_CONVENTION calling_convention_id::AARCH64_AAPCS
#elif defined(__arm__)
#define MACOS_API_CONVENTION calling_convention_id::ARM32_AAPCS
#elif defined(__i386__)
#define MACOS_API_CONVENTION calling_convention_id::X86_CDECL
#else
#warning "Unknown macOS architecture, using UNKNOWN calling convention"
#define MACOS_API_CONVENTION calling_convention_id::UNKNOWN
#endif

/**
 * @brief libsystem_c.dylib api definitions
 *
 * covers standard c library apis:
 * - stdio functions (printf family, file operations)
 * - string manipulation functions
 * - stdlib functions (conversion, utilities)
 * - environment variables
 * - time functions
 * - directory operations
 */

static const std::vector<api_info> macos_libsystem_c_apis = {
    // ===== STDIO APIs =====
    {.name = "_puts",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "write string to stdout",
     .headers = {"stdio.h"}},
    {.name = "_printf",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {
             {.name = "format", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}
             // note: variadic args not handled yet
         },
     .return_value = {.name = "chars_written", .param_type = param_info::type::INTEGER},
     .description = "formatted output to stdout",
     .headers = {"stdio.h"}},
    {.name = "_fprintf",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN},
          {.name = "format", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "chars_written", .param_type = param_info::type::INTEGER},
     .description = "formatted output to stream",
     .headers = {"stdio.h"}},
    {.name = "_sprintf",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::SECURITY_SENSITIVE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "str", .param_type = param_info::type::STRING, .param_direction = param_info::direction::OUT},
          {.name = "format", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "chars_written", .param_type = param_info::type::INTEGER},
     .description = "formatted output to string",
     .security_notes = {"buffer overflow risk", "use snprintf instead"},
     .headers = {"stdio.h"}},
    {.name = "_snprintf",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "str", .param_type = param_info::type::STRING, .param_direction = param_info::direction::OUT},
          {.name = "size", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN},
          {.name = "format", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "chars_written", .param_type = param_info::type::INTEGER},
     .description = "formatted output to string with size limit",
     .headers = {"stdio.h"}},
    {.name = "_vprintf",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "format", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "ap", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "chars_written", .param_type = param_info::type::INTEGER},
     .description = "formatted output using va_list",
     .headers = {"stdio.h"}},
    {.name = "_vsprintf",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::SECURITY_SENSITIVE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "str", .param_type = param_info::type::STRING, .param_direction = param_info::direction::OUT},
          {.name = "format", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "ap", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "chars_written", .param_type = param_info::type::INTEGER},
     .description = "formatted output to string using va_list",
     .security_notes = {"buffer overflow risk", "use vsnprintf instead"},
     .headers = {"stdio.h"}},
    {.name = "_vsnprintf",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "str", .param_type = param_info::type::STRING, .param_direction = param_info::direction::OUT},
          {.name = "size", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN},
          {.name = "format", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "ap", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "chars_written", .param_type = param_info::type::INTEGER},
     .description = "formatted output to string with size limit using va_list",
     .headers = {"stdio.h"}},
    
    // file operations
    {.name = "_fopen",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_IO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO) |
              static_cast<uint32_t>(api_info::behavior_flags::OPENS_HANDLE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "pathname", .param_type = param_info::type::PATH, .param_direction = param_info::direction::IN},
          {.name = "mode", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "stream", .param_type = param_info::type::POINTER},
     .description = "open file stream",
     .cleanup_api = "_fclose",
     .headers = {"stdio.h"}},
    {.name = "_fclose",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_IO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO) |
              static_cast<uint32_t>(api_info::behavior_flags::CLOSES_HANDLE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "close file stream",
     .headers = {"stdio.h"}},
    {.name = "_fread",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_IO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO) |
              static_cast<uint32_t>(api_info::behavior_flags::BLOCKING),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "ptr", .param_type = param_info::type::BUFFER, .param_direction = param_info::direction::OUT},
          {.name = "size", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN},
          {.name = "nmemb", .param_type = param_info::type::COUNT, .param_direction = param_info::direction::IN},
          {.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "items_read", .param_type = param_info::type::COUNT},
     .description = "read from file stream",
     .headers = {"stdio.h"}},
    {.name = "_fwrite",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_IO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO) |
              static_cast<uint32_t>(api_info::behavior_flags::BLOCKING),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "ptr", .param_type = param_info::type::BUFFER, .param_direction = param_info::direction::IN},
          {.name = "size", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN},
          {.name = "nmemb", .param_type = param_info::type::COUNT, .param_direction = param_info::direction::IN},
          {.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "items_written", .param_type = param_info::type::COUNT},
     .description = "write to file stream",
     .headers = {"stdio.h"}},
    {.name = "_fseek",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_IO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN},
          {.name = "offset", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN},
          {.name = "whence", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "seek in file stream",
     .headers = {"stdio.h"}},
    {.name = "_ftell",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_IO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "position", .param_type = param_info::type::INTEGER},
     .description = "get file stream position",
     .headers = {"stdio.h"}},
    {.name = "_fflush",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_IO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO) |
              static_cast<uint32_t>(api_info::behavior_flags::BLOCKING),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "flush file stream",
     .headers = {"stdio.h"}},
    {.name = "_feof",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_IO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "eof", .param_type = param_info::type::BOOLEAN},
     .description = "test end-of-file indicator",
     .headers = {"stdio.h"}},
    {.name = "_ferror",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_IO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "error", .param_type = param_info::type::BOOLEAN},
     .description = "test error indicator",
     .headers = {"stdio.h"}},
    {.name = "_rewind",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_IO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "void", .param_type = param_info::type::VOID},
     .description = "rewind file stream to beginning",
     .headers = {"stdio.h"}},
    
    // input functions
    {.name = "_scanf",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "format", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "items_assigned", .param_type = param_info::type::INTEGER},
     .description = "formatted input from stdin",
     .headers = {"stdio.h"}},
    {.name = "_sscanf",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "str", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "format", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "items_assigned", .param_type = param_info::type::INTEGER},
     .description = "formatted input from string",
     .headers = {"stdio.h"}},
    {.name = "_fscanf",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN},
          {.name = "format", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "items_assigned", .param_type = param_info::type::INTEGER},
     .description = "formatted input from stream",
     .headers = {"stdio.h"}},
    
    // character i/o
    {.name = "_fgetc",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "character", .param_type = param_info::type::INTEGER},
     .description = "get character from stream",
     .headers = {"stdio.h"}},
    {.name = "_fputc",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "c", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN},
          {.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "character", .param_type = param_info::type::INTEGER},
     .description = "write character to stream",
     .headers = {"stdio.h"}},
    {.name = "_fgets",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::OUT},
          {.name = "size", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN},
          {.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "string", .param_type = param_info::type::STRING},
     .description = "get string from stream",
     .headers = {"stdio.h"}},
    {.name = "_fputs",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "write string to stream",
     .headers = {"stdio.h"}},
    {.name = "_getc",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "character", .param_type = param_info::type::INTEGER},
     .description = "get character from stream (macro version)",
     .headers = {"stdio.h"}},
    {.name = "_putc",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "c", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN},
          {.name = "stream", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "character", .param_type = param_info::type::INTEGER},
     .description = "write character to stream (macro version)",
     .headers = {"stdio.h"}},
    {.name = "_getchar",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters = {},
     .return_value = {.name = "character", .param_type = param_info::type::INTEGER},
     .description = "get character from stdin",
     .headers = {"stdio.h"}},
    {.name = "_putchar",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "c", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "character", .param_type = param_info::type::INTEGER},
     .description = "write character to stdout",
     .headers = {"stdio.h"}},
    
    // error handling
    {.name = "_perror",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STDIO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "void", .param_type = param_info::type::VOID},
     .description = "print error message",
     .headers = {"stdio.h"}},
    
    // file management
    {.name = "_remove",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_MANAGEMENT,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO) |
              static_cast<uint32_t>(api_info::behavior_flags::MODIFIES_GLOBAL_STATE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "pathname", .param_type = param_info::type::PATH, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "remove file",
     .headers = {"stdio.h"}},
    {.name = "_rename",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_MANAGEMENT,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO) |
              static_cast<uint32_t>(api_info::behavior_flags::MODIFIES_GLOBAL_STATE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "old", .param_type = param_info::type::PATH, .param_direction = param_info::direction::IN},
          {.name = "new", .param_type = param_info::type::PATH, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "rename file",
     .headers = {"stdio.h"}},
    {.name = "_tmpfile",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_IO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::FILE_IO) |
              static_cast<uint32_t>(api_info::behavior_flags::OPENS_HANDLE),
     .convention = MACOS_API_CONVENTION,
     .parameters = {},
     .return_value = {.name = "stream", .param_type = param_info::type::POINTER},
     .description = "create temporary file",
     .cleanup_api = "_fclose",
     .headers = {"stdio.h"}},
    {.name = "_tmpnam",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_IO,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::SECURITY_SENSITIVE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::OUT}},
     .return_value = {.name = "filename", .param_type = param_info::type::STRING},
     .description = "generate temporary filename",
     .security_notes = {"race condition risk", "use mkstemp instead"},
     .headers = {"stdio.h"}},

    // ===== STRING MANIPULATION APIs =====
    {.name = "_strcpy",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::SECURITY_SENSITIVE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "dest", .param_type = param_info::type::STRING, .param_direction = param_info::direction::OUT},
          {.name = "src", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "dest", .param_type = param_info::type::STRING},
     .description = "copy string (unsafe - no bounds check)",
     .security_notes = {"buffer overflow risk", "use strncpy or strlcpy instead"},
     .headers = {"string.h"}},
    {.name = "_strncpy",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::SECURITY_SENSITIVE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "dest", .param_type = param_info::type::STRING, .param_direction = param_info::direction::OUT},
          {.name = "src", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "n", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "dest", .param_type = param_info::type::STRING},
     .description = "copy string with length limit",
     .headers = {"string.h"}},
    {.name = "_strcat",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::SECURITY_SENSITIVE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "dest", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN_OUT},
          {.name = "src", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "dest", .param_type = param_info::type::STRING},
     .description = "concatenate strings (unsafe - no bounds check)",
     .security_notes = {"buffer overflow risk", "use strncat or strlcat instead"},
     .headers = {"string.h"}},
    {.name = "_strncat",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::SECURITY_SENSITIVE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "dest", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN_OUT},
          {.name = "src", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "n", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "dest", .param_type = param_info::type::STRING},
     .description = "concatenate strings with length limit",
     .headers = {"string.h"}},
    {.name = "_strlen",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "length", .param_type = param_info::type::SIZE},
     .description = "get string length",
     .headers = {"string.h"}},
    {.name = "_strcmp",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s1", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "s2", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "compare strings",
     .headers = {"string.h"}},
    {.name = "_strncmp",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s1", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "s2", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "n", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "compare strings with length limit",
     .headers = {"string.h"}},
    {.name = "_strchr",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "c", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "ptr", .param_type = param_info::type::POINTER},
     .description = "find character in string",
     .headers = {"string.h"}},
    {.name = "_strrchr",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "c", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "ptr", .param_type = param_info::type::POINTER},
     .description = "find last occurrence of character",
     .headers = {"string.h"}},
    {.name = "_strstr",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "haystack", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "needle", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "ptr", .param_type = param_info::type::POINTER},
     .description = "find substring",
     .headers = {"string.h"}},
    {.name = "_strdup",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::ALLOCATES_MEMORY),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "duplicate", .param_type = param_info::type::STRING},
     .description = "duplicate string by allocating memory",
     .cleanup_api = "_free",
     .headers = {"string.h"}},
    {.name = "_strndup",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::ALLOCATES_MEMORY),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "n", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "duplicate", .param_type = param_info::type::STRING},
     .description = "duplicate string with length limit",
     .cleanup_api = "_free",
     .headers = {"string.h"}},
    {.name = "_strtok",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::MODIFIES_GLOBAL_STATE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "str", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN_OUT},
          {.name = "delim", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "token", .param_type = param_info::type::STRING},
     .description = "extract tokens from string",
     .headers = {"string.h"}},
    {.name = "_strpbrk",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "accept", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "ptr", .param_type = param_info::type::POINTER},
     .description = "find first occurrence of any character in set",
     .headers = {"string.h"}},
    {.name = "_strspn",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "accept", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "length", .param_type = param_info::type::SIZE},
     .description = "get length of prefix substring",
     .headers = {"string.h"}},
    {.name = "_strcspn",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "reject", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "length", .param_type = param_info::type::SIZE},
     .description = "get length of complementary substring",
     .headers = {"string.h"}},
    {.name = "_strerror",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "errnum", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "message", .param_type = param_info::type::STRING},
     .description = "get error message string",
     .headers = {"string.h"}},
    {.name = "_strcasecmp",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s1", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "s2", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "case-insensitive string comparison",
     .headers = {"strings.h"}},
    {.name = "_strncasecmp",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s1", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "s2", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "n", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "case-insensitive string comparison with length limit",
     .headers = {"strings.h"}},
    
    // memory functions
    {.name = "_memcpy",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::SECURITY_SENSITIVE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "dest",
           .param_type = param_info::type::BUFFER,
           .param_direction = param_info::direction::OUT,
           .size_param_index = 2},
          {.name = "src",
           .param_type = param_info::type::BUFFER,
           .param_direction = param_info::direction::IN,
           .size_param_index = 2},
          {.name = "n", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "dest", .param_type = param_info::type::POINTER},
     .description = "copy memory block",
     .security_notes = {"buffer overflow risk if dest too small"},
     .headers = {"string.h"}},
    {.name = "_memset",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s",
           .param_type = param_info::type::BUFFER,
           .param_direction = param_info::direction::OUT,
           .size_param_index = 2},
          {.name = "c", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN},
          {.name = "n", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "s", .param_type = param_info::type::POINTER},
     .description = "fill memory with byte value",
     .headers = {"string.h"}},
    {.name = "_memcmp",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "s1",
           .param_type = param_info::type::BUFFER,
           .param_direction = param_info::direction::IN,
           .size_param_index = 2},
          {.name = "s2",
           .param_type = param_info::type::BUFFER,
           .param_direction = param_info::direction::IN,
           .size_param_index = 2},
          {.name = "n", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "compare memory blocks",
     .headers = {"string.h"}},

    // ===== STDLIB CONVERSION APIs =====
    {.name = "_atoi",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "nptr", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "value", .param_type = param_info::type::INTEGER},
     .description = "convert string to integer",
     .headers = {"stdlib.h"}},
    {.name = "_atol",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "nptr", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "value", .param_type = param_info::type::INTEGER},
     .description = "convert string to long",
     .headers = {"stdlib.h"}},
    {.name = "_atof",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "nptr", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "value", .param_type = param_info::type::FLOATING_POINT},
     .description = "convert string to double",
     .headers = {"stdlib.h"}},
    {.name = "_strtol",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "nptr", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "endptr", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::OUT},
          {.name = "base", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "value", .param_type = param_info::type::INTEGER},
     .description = "convert string to long with base",
     .headers = {"stdlib.h"}},
    {.name = "_strtoul",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "nptr", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "endptr", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::OUT},
          {.name = "base", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "value", .param_type = param_info::type::INTEGER},
     .description = "convert string to unsigned long",
     .headers = {"stdlib.h"}},
    {.name = "_strtod",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "nptr", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "endptr", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::OUT}},
     .return_value = {.name = "value", .param_type = param_info::type::FLOATING_POINT},
     .description = "convert string to double",
     .headers = {"stdlib.h"}},
    {.name = "_strtoll",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "nptr", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "endptr", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::OUT},
          {.name = "base", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "value", .param_type = param_info::type::INTEGER},
     .description = "convert string to long long",
     .headers = {"stdlib.h"}},
    {.name = "_strtoull",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::STRING_MANIPULATION,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "nptr", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "endptr", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::OUT},
          {.name = "base", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "value", .param_type = param_info::type::INTEGER},
     .description = "convert string to unsigned long long",
     .headers = {"stdlib.h"}},

    // ===== STDLIB UTILITY APIs =====
    {.name = "_rand",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::MATH,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::MODIFIES_GLOBAL_STATE),
     .convention = MACOS_API_CONVENTION,
     .parameters = {},
     .return_value = {.name = "random", .param_type = param_info::type::INTEGER},
     .description = "generate pseudo-random number",
     .headers = {"stdlib.h"}},
    {.name = "_srand",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::MATH,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::MODIFIES_GLOBAL_STATE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "seed", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "void", .param_type = param_info::type::VOID},
     .description = "seed random number generator",
     .headers = {"stdlib.h"}},
    {.name = "_qsort",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::SORTING,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "base", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN_OUT},
          {.name = "nmemb", .param_type = param_info::type::COUNT, .param_direction = param_info::direction::IN},
          {.name = "size", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN},
          {.name = "compar", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "void", .param_type = param_info::type::VOID},
     .description = "sort array using quicksort",
     .headers = {"stdlib.h"}},
    {.name = "_bsearch",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::SORTING,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "key", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN},
          {.name = "base", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN},
          {.name = "nmemb", .param_type = param_info::type::COUNT, .param_direction = param_info::direction::IN},
          {.name = "size", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN},
          {.name = "compar", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "found", .param_type = param_info::type::POINTER},
     .description = "binary search in sorted array",
     .headers = {"stdlib.h"}},
    {.name = "_abs",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::MATH,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "j", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "absolute", .param_type = param_info::type::INTEGER},
     .description = "compute absolute value",
     .headers = {"stdlib.h"}},
    {.name = "_labs",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::MATH,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "j", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "absolute", .param_type = param_info::type::INTEGER},
     .description = "compute absolute value of long",
     .headers = {"stdlib.h"}},
    {.name = "_div",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::MATH,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "numer", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN},
          {.name = "denom", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::STRUCT},
     .description = "compute quotient and remainder",
     .headers = {"stdlib.h"}},
    {.name = "_ldiv",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::MATH,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "numer", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN},
          {.name = "denom", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::STRUCT},
     .description = "compute quotient and remainder of long",
     .headers = {"stdlib.h"}},

    // ===== ENVIRONMENT APIs =====
    {.name = "_getenv",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::ENVIRONMENT,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "name", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "value", .param_type = param_info::type::STRING},
     .description = "get environment variable",
     .headers = {"stdlib.h"}},
    {.name = "_setenv",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::ENVIRONMENT,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::MODIFIES_GLOBAL_STATE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "name", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "value", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN},
          {.name = "overwrite", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "set environment variable",
     .headers = {"stdlib.h"}},
    {.name = "_unsetenv",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::ENVIRONMENT,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::MODIFIES_GLOBAL_STATE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "name", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "unset environment variable",
     .headers = {"stdlib.h"}},
    {.name = "_putenv",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::ENVIRONMENT,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::MODIFIES_GLOBAL_STATE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "string", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "change or add environment variable",
     .headers = {"stdlib.h"}},

    // ===== PROGRAM CONTROL APIs =====
    {.name = "_system",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::PROCESS_CONTROL,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::MODIFIES_GLOBAL_STATE) |
              static_cast<uint32_t>(api_info::behavior_flags::SECURITY_SENSITIVE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "command", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "status", .param_type = param_info::type::INTEGER},
     .description = "execute shell command",
     .security_notes = {"command injection risk", "avoid passing user input"},
     .headers = {"stdlib.h"}},
    {.name = "_abort",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::PROCESS_CONTROL,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::MODIFIES_GLOBAL_STATE),
     .convention = MACOS_API_CONVENTION,
     .parameters = {},
     .return_value = {.name = "void", .param_type = param_info::type::VOID},
     .description = "abnormal program termination",
     .headers = {"stdlib.h"}},
    {.name = "_atexit",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::PROCESS_CONTROL,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::MODIFIES_GLOBAL_STATE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "func", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "register function to call at exit",
     .headers = {"stdlib.h"}},
    {.name = "_getopt",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::PROCESS_CONTROL,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::MODIFIES_GLOBAL_STATE),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "argc", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN},
          {.name = "argv", .param_type = param_info::type::POINTER, .param_direction = param_info::direction::IN},
          {.name = "optstring", .param_type = param_info::type::STRING, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "option", .param_type = param_info::type::INTEGER},
     .description = "parse command-line options",
     .headers = {"unistd.h"}},

    // ===== TIME/SLEEP APIs =====
    {.name = "_sleep",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::TIME,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::BLOCKING),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "seconds", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "remaining", .param_type = param_info::type::INTEGER},
     .description = "sleep for specified seconds",
     .headers = {"unistd.h"}},
    {.name = "_usleep",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::TIME,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::BLOCKING),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "usec", .param_type = param_info::type::INTEGER, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "sleep for specified microseconds",
     .headers = {"unistd.h"}},
    {.name = "_nanosleep",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::TIME,
     .flags = static_cast<uint32_t>(api_info::behavior_flags::BLOCKING),
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "req", .param_type = param_info::type::STRUCT, .param_direction = param_info::direction::IN},
          {.name = "rem",
           .param_type = param_info::type::STRUCT,
           .param_direction = param_info::direction::OUT,
           .is_optional = true}},
     .return_value = {.name = "result", .param_type = param_info::type::INTEGER},
     .description = "sleep for specified nanoseconds",
     .headers = {"time.h"}},
    {.name = "_time",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::TIME,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "tloc",
           .param_type = param_info::type::POINTER,
           .param_direction = param_info::direction::OUT,
           .is_optional = true}},
     .return_value = {.name = "seconds", .param_type = param_info::type::INTEGER},
     .description = "get current time in seconds since epoch",
     .headers = {"time.h"}},

    // ===== DIRECTORY OPERATIONS =====
    {.name = "_getcwd",
     .module = "libsystem_c.dylib",
     .api_category = api_info::category::FILE_MANAGEMENT,
     .flags = 0,
     .convention = MACOS_API_CONVENTION,
     .parameters =
         {{.name = "buf", .param_type = param_info::type::STRING, .param_direction = param_info::direction::OUT},
          {.name = "size", .param_type = param_info::type::SIZE, .param_direction = param_info::direction::IN}},
     .return_value = {.name = "path", .param_type = param_info::type::STRING},
     .description = "get current working directory",
     .headers = {"unistd.h"}}
};

} // namespace w1::abi::apis::macos